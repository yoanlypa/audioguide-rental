# Generated by Django 5.2.2 on 2025-07-15 10:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PedidoCrucero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printing_date', models.DateField()),
                ('supplier', models.CharField(max_length=200)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('service_date', models.DateField()),
                ('ship', models.CharField(max_length=100)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('terminal', models.CharField(blank=True, max_length=50)),
                ('sign', models.CharField(max_length=20)),
                ('excursion', models.CharField(max_length=200)),
                ('language', models.CharField(blank=True, max_length=50)),
                ('pax', models.PositiveIntegerField()),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['service_date', 'ship', 'sign'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('empresa', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('updates', models.JSONField(default=list)),
                ('excursion', models.CharField(blank=True, max_length=150)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('tipo_servicio', models.CharField(choices=[('mediodia', 'Medio día'), ('dia_Completo', 'Día completo'), ('circuito', 'Circuito'), ('crucero', 'Crucero')], default='mediodia', max_length=15)),
                ('estado', models.CharField(choices=[('pendiente_pago', 'Pendiente de pago'), ('pagado', 'Pagado'), ('aprobado', 'Aprobado'), ('entregado', 'Entregado'), ('recogido', 'Recogido')], default='pendiente_pago', max_length=20)),
                ('lugar_entrega', models.CharField(blank=True, max_length=150)),
                ('lugar_recogida', models.CharField(blank=True, max_length=150)),
                ('notas', models.TextField(blank=True)),
                ('bono', models.CharField(blank=True, max_length=100)),
                ('emisores', models.PositiveIntegerField()),
                ('pax', models.PositiveIntegerField()),
                ('guia', models.CharField(blank=True, max_length=150)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to='pedidos.empresa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
